@model Model.Alumno
@{
    ViewBag.Title = (Model.id > 0 ? Model.Nombre + " " + Model.Apellido : "Nuevo registro");
}

<ol class="breadcrumb">
    <li><a href="~/">Alumnos</a></li>
    <li class="active">@(Model.id > 0 ? Model.Nombre + " " + Model.Apellido : "Nuevo registro")</li>
</ol>

<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#informacion" aria-controls="informacion" role="tab" data-toggle="tab">Información</a></li>
    
    @if (Model.id > 0)
    {
        <li role="presentation"><a href="#cursos" aria-controls="cursos" role="tab" data-toggle="tab">Cursos</a></li>
    }
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="informacion">
        @using (Html.BeginForm("GuardarAlumno", "Home", FormMethod.Post, new { id = "frm-alumno" }))
        {
            //el frm-alumno es el id del form
            @Html.HiddenFor(x => x.id)
            <!--<div class="panel panel-default">
                <div class="panel-heading">Información personal</div>
                <div class="panel-body">-->
                    <div class="form-group">
                        @Html.LabelFor(x => x.Nombre)
                        @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control" })
                        <!-- null: Se puede personalizar el contenido del mensaje a mostrar -->
                        @Html.ValidationMessageFor(x => x.Nombre, null, new { @class = "label label-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Apellido)
                        @Html.TextBoxFor(x => x.Apellido, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Apellido, null, new { @class = "label label-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Sexo)
                        <select name="Sexo" class="form-control">
                            <option @(Model.Sexo == 1 ? "selected" : "") value="1">Hombre</option>
                            <option @(Model.Sexo == 2 ? "selected" : "") value="2">Mujer</option>
                        </select>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.FechaNacimiento)
                        @Html.TextBoxFor(x => x.FechaNacimiento, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.FechaNacimiento, null, new { @class = "label label-danger" })
                    </div>
              <!--  </div>
            </div>-->

            <div class="text-right">
                <button data-ajax="true" data-confirm="¿Esta seguro de guardar este registro?" type="submit" class="btn btn-primary">Guardar</button>
            </div>
        }
    </div>
    @if (Model.id > 0)
    {
        <div role="tabpanel" class="tab-pane" id="cursos"
             data-url="@Url.Content("~/home/cursos/")"
             data-id="0"
             data-alumnoid="@Model.id"
             data-cursoid="0"
             data-nota="0">
        </div>
       
    }
</div>

@if (Model.id > 0)
{
    <div id="modalEdicionNotaCurso" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edición de asignatura</h4>
                </div>
                <div class="modal-body"></div>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        @if (Model.id > 0)
        { //Se agregan las etiquetas text para que se interprete lo que hay dentro como codigo js
            <text>
            CargarCursos();
            </text>
        }
    })

    function CargarCursos()
    {
        renderPartialView($("#cursos"), $("#cursos")); 
    }

    function renderPartialView(idElement, idElementRendered) {

        if (idElementRendered.is(':visible')) {
            //Cerrar ventana modal si se encuentra abierta
            $(".modal").modal("hide");
        }

        $.ajax({
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            dataType: 'JSON',
            url: idElement.attr('data-url'),
            data: "{ alumnoCurso:" + JSON.stringify(objetoAlumnoCurso(idElement)) + "}",
            success: function (r) {
                if (r.response) {
                    idElementRendered.html(r.message); 
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(textStatus + " " + errorThrown);
            }

        })
        
    }

    function objetoAlumnoCurso(idElement) {

        var alumnoCurso = new Object();

        alumnoCurso.id = idElement.attr("data-id");
        alumnoCurso.Alumno_id = idElement.attr("data-alumnoid");
        alumnoCurso.Curso_id = idElement.attr("data-cursoid");
        alumnoCurso.Nota = idElement.attr("data-nota");
        alumnoCurso.Alumno = null;
        alumnoCurso.Curso = null;

        return alumnoCurso;

    }

    function cargarModalEdicionAlumnoCurso() {

       $(".modal-body").load('@Url.Content("~/home/cursos/?Alumno_id=" + Model.id + "&Editar_nota_curso=true")');

    }
</script>

<!--
<script>
    function SoyAlgo() {
        alert('Algo');
    }
</script>

<script>
    $(document).ready(function () {
        $("#frm-alumno").submit(function () {

            var form = $(this); //Se guarda el formulario

            $.ajax({
                dataType: 'JSON',
                type: 'POST',
                url: form.attr('action'), // -- /Home/GuardarAlumno
                data: form.serialize(),
                success: function (r) {
                    if (r.response) {
                        window.location.href = r.href;
                    } else {
                        alert(r.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus + " " + errorThrown);
                }
            })

            return false; //Cancelar postback
        })
    })
</script>
    -->